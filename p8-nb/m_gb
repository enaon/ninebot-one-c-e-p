//m_gb
//E.setConsole(Serial1,{force:true});
function gbSend(message) {
    Bluetooth.println("");
    Bluetooth.println(JSON.stringify(message));
}
function sendBattery() {
    gbSend({ t: "status", bat: w.battVoltage() });
}
function handleNotificationEvent(event) {
	if (event.t === "notify-") return;
	let d=(Date()).toString().split(' ');
    let ti=(""+d[4]+" "+d[0]+" "+d[2]);
	if (event.src==="Phone"&&event.title.startsWith('Missed')){
	  notify.nCall++;
  	  notify.New++;	
	  notify.call.unshift("{\"src\":\""+event.src+"\",\"title\":\""+event.title+"\",\"body\":\""+event.body+"\",\"time\":\""+ti+"\"}");
      if (notify.call.length>10) notify.call.pop();
    }else if (event.t === "notify") {
	  notify.nIm++;
  	  notify.New++;
	  notify.im.unshift("{\"src\":\""+event.src+"\",\"title\":\""+event.title+"\",\"body\":\""+event.body+"\",\"time\":\""+ti+"\"}");
      if (notify.im.length>10) notify.im.pop();

    }
	digitalPulse(D16,1,[80,50,80]);

} 
function handleWeatherEvent(event) {
	  notify.nInfo++;
  	  notify.New++;
	  notify.wupd=1;
	  let d=(Date()).toString().split(' ');
      let ti=(""+d[4]+" "+d[0]+" "+d[2]);
	  notify.info.unshift("{\"src\":\"Weather\",\"title\":\"Weather Updated\",\"body\":\""+event.loc+"\",\"time\":\""+ti+"\"}");
      if (notify.info.length>10) notify.info.pop();
	  digitalPulse(D16,1,[80,50,80]);
	  notify.weather=event;
} 
function handleCallEvent(event) {
	if (event.cmd==="accept"&&event.name){
		notify.in=event;notify.ring=1;
		digitalPulse(D16,1,[80,50,80,50,200,50,80,50,80]);
	}else if (event.cmd!=="accept") {
		  notify.ring=0;notify.in=0;
	}
} 
//require('Storage').writeJSON("messages.log",messages)
//if ( JSON.parse(messages[0]).t=="notify") print(1)
// var _GB = global.GB;
var find=0;
function handleFindEvent(event) {
    if (event.n===true) {
	  if (!find){
		  find=setInterval(function(){ digitalPulse(D16,1,[100,50,100,50,100]); },1000); 
	  }
	} else { // found
		clearInterval(find);find=0;
    }
} 
global.GB = (event) => {
	switch (event.t) {
	  case "notify":
      //case "notify-":
        handleNotificationEvent(event);
		print("handle evenet");
        break;
      case "musicinfo":
        //handleMusicInfoUpdate(event);
        break;
      case "musicstate":
        //handleMusicStateUpdate(event);
        break;
      case "call":
        handleCallEvent(event);
        break;
      case "find":
        handleFindEvent(event);
        break;
	  case "weather":
        handleWeatherEvent(event);
        break;
    }
};
  
  
  